////  YPTableViewCell.m//  SYPFrameWork////  Created by sunyuping on 13-1-8.//  Copyright (c) 2013å¹´ sunyuping. All rights reserved.//#import "YPTableViewCell.h"@implementation YPTableViewCell@synthesize object = _object;@synthesize indexPath;@synthesize userInteractionBlockSafe = _userInteractionBlockSafe;+ (CGFloat)tableView:(UITableView *)tableView rowHeightForObject:(id)object {    return 44;}- (id)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)identifier {    if (self = [super initWithStyle:UITableViewCellStyleValue2 reuseIdentifier:identifier]) {                //jianjie.wu//        self.textLabel.font = TTSTYLEVAR(tableFont);//        self.textLabel.textColor = TTSTYLEVAR(textColor);//        self.textLabel.highlightedTextColor = TTSTYLEVAR(highlightedTextColor);//        self.textLabel.textAlignment = UITextAlignmentLeft;//        self.textLabel.lineBreakMode = UILineBreakModeTailTruncation;//        self.textLabel.adjustsFontSizeToFitWidth = YES;//        //        self.detailTextLabel.font = TTSTYLEVAR(font);//        self.detailTextLabel.textColor = TTSTYLEVAR(tableSubTextColor);//        self.detailTextLabel.highlightedTextColor = TTSTYLEVAR(highlightedTextColor);//        self.detailTextLabel.textAlignment = UITextAlignmentLeft;//        self.detailTextLabel.contentMode = UIViewContentModeTop;//        self.detailTextLabel.lineBreakMode = UILineBreakModeTailTruncation;//        self.detailTextLabel.numberOfLines = kTableMessageTextLineCount;                self.userInteractionBlockSafe = NO;    }        return self;}- (void)dealloc {    self.object = nil;    self.indexPath = nil;        [super dealloc];}- (void)setObject:(id)object {    if (object != _object) {        if (_object) {            [self finishObserveObjectProperty];            YPRelease(_object);        }                _object = [object retain];        if (_object)            [self startObserveObjectProperty];    }}#pragma mark Object Property Observer- (void)startObserveObjectProperty {    }- (void)finishObserveObjectProperty {    }- (void)addObservedProperty:(NSString *)property {    [_object addObserver:self forKeyPath:property                 options:NSKeyValueObservingOptionNew                 context:nil];}- (void)removeObservedProperty:(NSString *)property {    [_object removeObserver:self forKeyPath:property];}- (void)objectPropertyChanged:(NSString *)property {    }- (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary *)change context:(void *)context {    if (object != _object) {        [object removeObserver:self forKeyPath:keyPath];    }    else {        [self objectPropertyChanged:keyPath];    }}- (void)touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event {    if (self.userInteractionBlockSafe) {        [self detachInteractionBlock];    }    [super touchesEnded:touches withEvent:event];  }- (void)detachInteractionBlock {    self.userInteractionEnabled = NO;    [NSThread detachNewThreadSelector:@selector(cancelInteractionBlock) toTarget:self withObject:nil];}- (void)cancelInteractionBlock {    if (![NSThread isMainThread]) {        [NSThread sleepForTimeInterval:YPT_CELL_INTERACTION_BLOCK_DURATION];        self.userInteractionEnabled = YES;    }}@end